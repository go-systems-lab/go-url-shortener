// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/url/url.proto

package url

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Shorten URL Request
type ShortenRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	LongUrl        string                 `protobuf:"bytes,1,opt,name=long_url,json=longUrl,proto3" json:"long_url,omitempty"`
	CustomAlias    string                 `protobuf:"bytes,2,opt,name=custom_alias,json=customAlias,proto3" json:"custom_alias,omitempty"`           // optional custom short code
	ExpirationTime int64                  `protobuf:"varint,3,opt,name=expiration_time,json=expirationTime,proto3" json:"expiration_time,omitempty"` // unix timestamp, 0 for no expiration
	UserId         string                 `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Metadata       map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // additional metadata
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ShortenRequest) Reset() {
	*x = ShortenRequest{}
	mi := &file_proto_url_url_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShortenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortenRequest) ProtoMessage() {}

func (x *ShortenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_url_url_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortenRequest.ProtoReflect.Descriptor instead.
func (*ShortenRequest) Descriptor() ([]byte, []int) {
	return file_proto_url_url_proto_rawDescGZIP(), []int{0}
}

func (x *ShortenRequest) GetLongUrl() string {
	if x != nil {
		return x.LongUrl
	}
	return ""
}

func (x *ShortenRequest) GetCustomAlias() string {
	if x != nil {
		return x.CustomAlias
	}
	return ""
}

func (x *ShortenRequest) GetExpirationTime() int64 {
	if x != nil {
		return x.ExpirationTime
	}
	return 0
}

func (x *ShortenRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ShortenRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Shorten URL Response
type ShortenResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShortCode     string                 `protobuf:"bytes,1,opt,name=short_code,json=shortCode,proto3" json:"short_code,omitempty"`
	ShortUrl      string                 `protobuf:"bytes,2,opt,name=short_url,json=shortUrl,proto3" json:"short_url,omitempty"`
	LongUrl       string                 `protobuf:"bytes,3,opt,name=long_url,json=longUrl,proto3" json:"long_url,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ExpiresAt     int64                  `protobuf:"varint,5,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	UserId        string                 `protobuf:"bytes,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShortenResponse) Reset() {
	*x = ShortenResponse{}
	mi := &file_proto_url_url_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShortenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortenResponse) ProtoMessage() {}

func (x *ShortenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_url_url_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortenResponse.ProtoReflect.Descriptor instead.
func (*ShortenResponse) Descriptor() ([]byte, []int) {
	return file_proto_url_url_proto_rawDescGZIP(), []int{1}
}

func (x *ShortenResponse) GetShortCode() string {
	if x != nil {
		return x.ShortCode
	}
	return ""
}

func (x *ShortenResponse) GetShortUrl() string {
	if x != nil {
		return x.ShortUrl
	}
	return ""
}

func (x *ShortenResponse) GetLongUrl() string {
	if x != nil {
		return x.LongUrl
	}
	return ""
}

func (x *ShortenResponse) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ShortenResponse) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *ShortenResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// Get URL Information Request
type GetURLRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShortCode     string                 `protobuf:"bytes,1,opt,name=short_code,json=shortCode,proto3" json:"short_code,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // for authorization
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetURLRequest) Reset() {
	*x = GetURLRequest{}
	mi := &file_proto_url_url_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetURLRequest) ProtoMessage() {}

func (x *GetURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_url_url_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetURLRequest.ProtoReflect.Descriptor instead.
func (*GetURLRequest) Descriptor() ([]byte, []int) {
	return file_proto_url_url_proto_rawDescGZIP(), []int{2}
}

func (x *GetURLRequest) GetShortCode() string {
	if x != nil {
		return x.ShortCode
	}
	return ""
}

func (x *GetURLRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// URL Information
type URLInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShortCode     string                 `protobuf:"bytes,1,opt,name=short_code,json=shortCode,proto3" json:"short_code,omitempty"`
	ShortUrl      string                 `protobuf:"bytes,2,opt,name=short_url,json=shortUrl,proto3" json:"short_url,omitempty"`
	LongUrl       string                 `protobuf:"bytes,3,opt,name=long_url,json=longUrl,proto3" json:"long_url,omitempty"`
	UserId        string                 `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ExpiresAt     int64                  `protobuf:"varint,6,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	ClickCount    int64                  `protobuf:"varint,7,opt,name=click_count,json=clickCount,proto3" json:"click_count,omitempty"`
	IsActive      bool                   `protobuf:"varint,8,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,9,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *URLInfo) Reset() {
	*x = URLInfo{}
	mi := &file_proto_url_url_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *URLInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLInfo) ProtoMessage() {}

func (x *URLInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_url_url_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLInfo.ProtoReflect.Descriptor instead.
func (*URLInfo) Descriptor() ([]byte, []int) {
	return file_proto_url_url_proto_rawDescGZIP(), []int{3}
}

func (x *URLInfo) GetShortCode() string {
	if x != nil {
		return x.ShortCode
	}
	return ""
}

func (x *URLInfo) GetShortUrl() string {
	if x != nil {
		return x.ShortUrl
	}
	return ""
}

func (x *URLInfo) GetLongUrl() string {
	if x != nil {
		return x.LongUrl
	}
	return ""
}

func (x *URLInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *URLInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *URLInfo) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *URLInfo) GetClickCount() int64 {
	if x != nil {
		return x.ClickCount
	}
	return 0
}

func (x *URLInfo) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *URLInfo) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Delete URL Request
type DeleteURLRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShortCode     string                 `protobuf:"bytes,1,opt,name=short_code,json=shortCode,proto3" json:"short_code,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // for authorization
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteURLRequest) Reset() {
	*x = DeleteURLRequest{}
	mi := &file_proto_url_url_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteURLRequest) ProtoMessage() {}

func (x *DeleteURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_url_url_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteURLRequest.ProtoReflect.Descriptor instead.
func (*DeleteURLRequest) Descriptor() ([]byte, []int) {
	return file_proto_url_url_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteURLRequest) GetShortCode() string {
	if x != nil {
		return x.ShortCode
	}
	return ""
}

func (x *DeleteURLRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// Delete URL Response
type DeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	mi := &file_proto_url_url_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_url_url_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_proto_url_url_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Get User URLs Request (pagination)
type GetUserURLsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	SortBy        string                 `protobuf:"bytes,4,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`          // created_at, click_count, etc.
	SortOrder     string                 `protobuf:"bytes,5,opt,name=sort_order,json=sortOrder,proto3" json:"sort_order,omitempty"` // asc, desc
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserURLsRequest) Reset() {
	*x = GetUserURLsRequest{}
	mi := &file_proto_url_url_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserURLsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserURLsRequest) ProtoMessage() {}

func (x *GetUserURLsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_url_url_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserURLsRequest.ProtoReflect.Descriptor instead.
func (*GetUserURLsRequest) Descriptor() ([]byte, []int) {
	return file_proto_url_url_proto_rawDescGZIP(), []int{6}
}

func (x *GetUserURLsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserURLsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetUserURLsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetUserURLsRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *GetUserURLsRequest) GetSortOrder() string {
	if x != nil {
		return x.SortOrder
	}
	return ""
}

// Get User URLs Response
type GetUserURLsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Urls          []*URLInfo             `protobuf:"bytes,1,rep,name=urls,proto3" json:"urls,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	HasNext       bool                   `protobuf:"varint,5,opt,name=has_next,json=hasNext,proto3" json:"has_next,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserURLsResponse) Reset() {
	*x = GetUserURLsResponse{}
	mi := &file_proto_url_url_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserURLsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserURLsResponse) ProtoMessage() {}

func (x *GetUserURLsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_url_url_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserURLsResponse.ProtoReflect.Descriptor instead.
func (*GetUserURLsResponse) Descriptor() ([]byte, []int) {
	return file_proto_url_url_proto_rawDescGZIP(), []int{7}
}

func (x *GetUserURLsResponse) GetUrls() []*URLInfo {
	if x != nil {
		return x.Urls
	}
	return nil
}

func (x *GetUserURLsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *GetUserURLsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetUserURLsResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetUserURLsResponse) GetHasNext() bool {
	if x != nil {
		return x.HasNext
	}
	return false
}

// Update URL Request
type UpdateURLRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ShortCode         string                 `protobuf:"bytes,1,opt,name=short_code,json=shortCode,proto3" json:"short_code,omitempty"`
	UserId            string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	NewLongUrl        string                 `protobuf:"bytes,3,opt,name=new_long_url,json=newLongUrl,proto3" json:"new_long_url,omitempty"`                                                   // optional
	NewExpirationTime int64                  `protobuf:"varint,4,opt,name=new_expiration_time,json=newExpirationTime,proto3" json:"new_expiration_time,omitempty"`                             // optional
	Metadata          map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // optional
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *UpdateURLRequest) Reset() {
	*x = UpdateURLRequest{}
	mi := &file_proto_url_url_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateURLRequest) ProtoMessage() {}

func (x *UpdateURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_url_url_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateURLRequest.ProtoReflect.Descriptor instead.
func (*UpdateURLRequest) Descriptor() ([]byte, []int) {
	return file_proto_url_url_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateURLRequest) GetShortCode() string {
	if x != nil {
		return x.ShortCode
	}
	return ""
}

func (x *UpdateURLRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateURLRequest) GetNewLongUrl() string {
	if x != nil {
		return x.NewLongUrl
	}
	return ""
}

func (x *UpdateURLRequest) GetNewExpirationTime() int64 {
	if x != nil {
		return x.NewExpirationTime
	}
	return 0
}

func (x *UpdateURLRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Update URL Response
type UpdateURLResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	UpdatedUrl    *URLInfo               `protobuf:"bytes,3,opt,name=updated_url,json=updatedUrl,proto3" json:"updated_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateURLResponse) Reset() {
	*x = UpdateURLResponse{}
	mi := &file_proto_url_url_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateURLResponse) ProtoMessage() {}

func (x *UpdateURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_url_url_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateURLResponse.ProtoReflect.Descriptor instead.
func (*UpdateURLResponse) Descriptor() ([]byte, []int) {
	return file_proto_url_url_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateURLResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateURLResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateURLResponse) GetUpdatedUrl() *URLInfo {
	if x != nil {
		return x.UpdatedUrl
	}
	return nil
}

var File_proto_url_url_proto protoreflect.FileDescriptor

const file_proto_url_url_proto_rawDesc = "" +
	"\n" +
	"\x13proto/url/url.proto\x12\x03url\"\x8c\x02\n" +
	"\x0eShortenRequest\x12\x19\n" +
	"\blong_url\x18\x01 \x01(\tR\alongUrl\x12!\n" +
	"\fcustom_alias\x18\x02 \x01(\tR\vcustomAlias\x12'\n" +
	"\x0fexpiration_time\x18\x03 \x01(\x03R\x0eexpirationTime\x12\x17\n" +
	"\auser_id\x18\x04 \x01(\tR\x06userId\x12=\n" +
	"\bmetadata\x18\x05 \x03(\v2!.url.ShortenRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xbf\x01\n" +
	"\x0fShortenResponse\x12\x1d\n" +
	"\n" +
	"short_code\x18\x01 \x01(\tR\tshortCode\x12\x1b\n" +
	"\tshort_url\x18\x02 \x01(\tR\bshortUrl\x12\x19\n" +
	"\blong_url\x18\x03 \x01(\tR\alongUrl\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x05 \x01(\x03R\texpiresAt\x12\x17\n" +
	"\auser_id\x18\x06 \x01(\tR\x06userId\"G\n" +
	"\rGetURLRequest\x12\x1d\n" +
	"\n" +
	"short_code\x18\x01 \x01(\tR\tshortCode\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"\xea\x02\n" +
	"\aURLInfo\x12\x1d\n" +
	"\n" +
	"short_code\x18\x01 \x01(\tR\tshortCode\x12\x1b\n" +
	"\tshort_url\x18\x02 \x01(\tR\bshortUrl\x12\x19\n" +
	"\blong_url\x18\x03 \x01(\tR\alongUrl\x12\x17\n" +
	"\auser_id\x18\x04 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"created_at\x18\x05 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x06 \x01(\x03R\texpiresAt\x12\x1f\n" +
	"\vclick_count\x18\a \x01(\x03R\n" +
	"clickCount\x12\x1b\n" +
	"\tis_active\x18\b \x01(\bR\bisActive\x126\n" +
	"\bmetadata\x18\t \x03(\v2\x1a.url.URLInfo.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"J\n" +
	"\x10DeleteURLRequest\x12\x1d\n" +
	"\n" +
	"short_code\x18\x01 \x01(\tR\tshortCode\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"D\n" +
	"\x0eDeleteResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x96\x01\n" +
	"\x12GetUserURLsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\x12\x17\n" +
	"\asort_by\x18\x04 \x01(\tR\x06sortBy\x12\x1d\n" +
	"\n" +
	"sort_order\x18\x05 \x01(\tR\tsortOrder\"\xa4\x01\n" +
	"\x13GetUserURLsResponse\x12 \n" +
	"\x04urls\x18\x01 \x03(\v2\f.url.URLInfoR\x04urls\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\x12\x19\n" +
	"\bhas_next\x18\x05 \x01(\bR\ahasNext\"\x9a\x02\n" +
	"\x10UpdateURLRequest\x12\x1d\n" +
	"\n" +
	"short_code\x18\x01 \x01(\tR\tshortCode\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12 \n" +
	"\fnew_long_url\x18\x03 \x01(\tR\n" +
	"newLongUrl\x12.\n" +
	"\x13new_expiration_time\x18\x04 \x01(\x03R\x11newExpirationTime\x12?\n" +
	"\bmetadata\x18\x05 \x03(\v2#.url.UpdateURLRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"v\n" +
	"\x11UpdateURLResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12-\n" +
	"\vupdated_url\x18\x03 \x01(\v2\f.url.URLInfoR\n" +
	"updatedUrl2\xae\x02\n" +
	"\fURLShortener\x127\n" +
	"\n" +
	"ShortenURL\x12\x13.url.ShortenRequest\x1a\x14.url.ShortenResponse\x12.\n" +
	"\n" +
	"GetURLInfo\x12\x12.url.GetURLRequest\x1a\f.url.URLInfo\x127\n" +
	"\tDeleteURL\x12\x15.url.DeleteURLRequest\x1a\x13.url.DeleteResponse\x12@\n" +
	"\vGetUserURLs\x12\x17.url.GetUserURLsRequest\x1a\x18.url.GetUserURLsResponse\x12:\n" +
	"\tUpdateURL\x12\x15.url.UpdateURLRequest\x1a\x16.url.UpdateURLResponseB6Z4github.com/go-systems-lab/go-url-shortener/proto/urlb\x06proto3"

var (
	file_proto_url_url_proto_rawDescOnce sync.Once
	file_proto_url_url_proto_rawDescData []byte
)

func file_proto_url_url_proto_rawDescGZIP() []byte {
	file_proto_url_url_proto_rawDescOnce.Do(func() {
		file_proto_url_url_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_url_url_proto_rawDesc), len(file_proto_url_url_proto_rawDesc)))
	})
	return file_proto_url_url_proto_rawDescData
}

var file_proto_url_url_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_proto_url_url_proto_goTypes = []any{
	(*ShortenRequest)(nil),      // 0: url.ShortenRequest
	(*ShortenResponse)(nil),     // 1: url.ShortenResponse
	(*GetURLRequest)(nil),       // 2: url.GetURLRequest
	(*URLInfo)(nil),             // 3: url.URLInfo
	(*DeleteURLRequest)(nil),    // 4: url.DeleteURLRequest
	(*DeleteResponse)(nil),      // 5: url.DeleteResponse
	(*GetUserURLsRequest)(nil),  // 6: url.GetUserURLsRequest
	(*GetUserURLsResponse)(nil), // 7: url.GetUserURLsResponse
	(*UpdateURLRequest)(nil),    // 8: url.UpdateURLRequest
	(*UpdateURLResponse)(nil),   // 9: url.UpdateURLResponse
	nil,                         // 10: url.ShortenRequest.MetadataEntry
	nil,                         // 11: url.URLInfo.MetadataEntry
	nil,                         // 12: url.UpdateURLRequest.MetadataEntry
}
var file_proto_url_url_proto_depIdxs = []int32{
	10, // 0: url.ShortenRequest.metadata:type_name -> url.ShortenRequest.MetadataEntry
	11, // 1: url.URLInfo.metadata:type_name -> url.URLInfo.MetadataEntry
	3,  // 2: url.GetUserURLsResponse.urls:type_name -> url.URLInfo
	12, // 3: url.UpdateURLRequest.metadata:type_name -> url.UpdateURLRequest.MetadataEntry
	3,  // 4: url.UpdateURLResponse.updated_url:type_name -> url.URLInfo
	0,  // 5: url.URLShortener.ShortenURL:input_type -> url.ShortenRequest
	2,  // 6: url.URLShortener.GetURLInfo:input_type -> url.GetURLRequest
	4,  // 7: url.URLShortener.DeleteURL:input_type -> url.DeleteURLRequest
	6,  // 8: url.URLShortener.GetUserURLs:input_type -> url.GetUserURLsRequest
	8,  // 9: url.URLShortener.UpdateURL:input_type -> url.UpdateURLRequest
	1,  // 10: url.URLShortener.ShortenURL:output_type -> url.ShortenResponse
	3,  // 11: url.URLShortener.GetURLInfo:output_type -> url.URLInfo
	5,  // 12: url.URLShortener.DeleteURL:output_type -> url.DeleteResponse
	7,  // 13: url.URLShortener.GetUserURLs:output_type -> url.GetUserURLsResponse
	9,  // 14: url.URLShortener.UpdateURL:output_type -> url.UpdateURLResponse
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_proto_url_url_proto_init() }
func file_proto_url_url_proto_init() {
	if File_proto_url_url_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_url_url_proto_rawDesc), len(file_proto_url_url_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_url_url_proto_goTypes,
		DependencyIndexes: file_proto_url_url_proto_depIdxs,
		MessageInfos:      file_proto_url_url_proto_msgTypes,
	}.Build()
	File_proto_url_url_proto = out.File
	file_proto_url_url_proto_goTypes = nil
	file_proto_url_url_proto_depIdxs = nil
}
