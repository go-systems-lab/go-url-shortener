// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/redirect/redirect.proto

package redirect

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to resolve a short URL
type ResolveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShortCode     string                 `protobuf:"bytes,1,opt,name=short_code,json=shortCode,proto3" json:"short_code,omitempty"`    // Short code to resolve (e.g., "abc123")
	ClientIp      string                 `protobuf:"bytes,2,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`       // Client IP for analytics
	UserAgent     string                 `protobuf:"bytes,3,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`    // User agent string
	Referrer      string                 `protobuf:"bytes,4,opt,name=referrer,proto3" json:"referrer,omitempty"`                       // HTTP referrer
	Country       string                 `protobuf:"bytes,5,opt,name=country,proto3" json:"country,omitempty"`                         // Country code (optional)
	DeviceType    string                 `protobuf:"bytes,6,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty"` // mobile, desktop, tablet
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResolveRequest) Reset() {
	*x = ResolveRequest{}
	mi := &file_proto_redirect_redirect_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveRequest) ProtoMessage() {}

func (x *ResolveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_redirect_redirect_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveRequest.ProtoReflect.Descriptor instead.
func (*ResolveRequest) Descriptor() ([]byte, []int) {
	return file_proto_redirect_redirect_proto_rawDescGZIP(), []int{0}
}

func (x *ResolveRequest) GetShortCode() string {
	if x != nil {
		return x.ShortCode
	}
	return ""
}

func (x *ResolveRequest) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *ResolveRequest) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *ResolveRequest) GetReferrer() string {
	if x != nil {
		return x.Referrer
	}
	return ""
}

func (x *ResolveRequest) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *ResolveRequest) GetDeviceType() string {
	if x != nil {
		return x.DeviceType
	}
	return ""
}

// Response with resolved URL
type ResolveResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LongUrl       string                 `protobuf:"bytes,1,opt,name=long_url,json=longUrl,proto3" json:"long_url,omitempty"`           // Original long URL
	Found         bool                   `protobuf:"varint,2,opt,name=found,proto3" json:"found,omitempty"`                             // Whether URL was found
	Expired       bool                   `protobuf:"varint,3,opt,name=expired,proto3" json:"expired,omitempty"`                         // Whether URL has expired
	CreatedAt     int64                  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`    // When URL was created
	ExpiresAt     int64                  `protobuf:"varint,5,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`    // When URL expires (if any)
	ClickCount    int64                  `protobuf:"varint,6,opt,name=click_count,json=clickCount,proto3" json:"click_count,omitempty"` // Total clicks (cached)
	Error         string                 `protobuf:"bytes,7,opt,name=error,proto3" json:"error,omitempty"`                              // Error message if any
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResolveResponse) Reset() {
	*x = ResolveResponse{}
	mi := &file_proto_redirect_redirect_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveResponse) ProtoMessage() {}

func (x *ResolveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_redirect_redirect_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveResponse.ProtoReflect.Descriptor instead.
func (*ResolveResponse) Descriptor() ([]byte, []int) {
	return file_proto_redirect_redirect_proto_rawDescGZIP(), []int{1}
}

func (x *ResolveResponse) GetLongUrl() string {
	if x != nil {
		return x.LongUrl
	}
	return ""
}

func (x *ResolveResponse) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

func (x *ResolveResponse) GetExpired() bool {
	if x != nil {
		return x.Expired
	}
	return false
}

func (x *ResolveResponse) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ResolveResponse) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *ResolveResponse) GetClickCount() int64 {
	if x != nil {
		return x.ClickCount
	}
	return 0
}

func (x *ResolveResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Request to track a click event
type ClickRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShortCode     string                 `protobuf:"bytes,1,opt,name=short_code,json=shortCode,proto3" json:"short_code,omitempty"`    // Short code that was clicked
	LongUrl       string                 `protobuf:"bytes,2,opt,name=long_url,json=longUrl,proto3" json:"long_url,omitempty"`          // Resolved long URL
	ClientIp      string                 `protobuf:"bytes,3,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`       // Client IP address
	UserAgent     string                 `protobuf:"bytes,4,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`    // Full user agent string
	Referrer      string                 `protobuf:"bytes,5,opt,name=referrer,proto3" json:"referrer,omitempty"`                       // HTTP referrer URL
	Country       string                 `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`                         // Country code (GeoIP)
	City          string                 `protobuf:"bytes,7,opt,name=city,proto3" json:"city,omitempty"`                               // City name (GeoIP)
	DeviceType    string                 `protobuf:"bytes,8,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty"` // mobile, desktop, tablet
	Browser       string                 `protobuf:"bytes,9,opt,name=browser,proto3" json:"browser,omitempty"`                         // Chrome, Firefox, Safari, etc.
	Os            string                 `protobuf:"bytes,10,opt,name=os,proto3" json:"os,omitempty"`                                  // Windows, macOS, Linux, iOS, Android
	Timestamp     int64                  `protobuf:"varint,11,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                   // Click timestamp
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClickRequest) Reset() {
	*x = ClickRequest{}
	mi := &file_proto_redirect_redirect_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClickRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickRequest) ProtoMessage() {}

func (x *ClickRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_redirect_redirect_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickRequest.ProtoReflect.Descriptor instead.
func (*ClickRequest) Descriptor() ([]byte, []int) {
	return file_proto_redirect_redirect_proto_rawDescGZIP(), []int{2}
}

func (x *ClickRequest) GetShortCode() string {
	if x != nil {
		return x.ShortCode
	}
	return ""
}

func (x *ClickRequest) GetLongUrl() string {
	if x != nil {
		return x.LongUrl
	}
	return ""
}

func (x *ClickRequest) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *ClickRequest) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *ClickRequest) GetReferrer() string {
	if x != nil {
		return x.Referrer
	}
	return ""
}

func (x *ClickRequest) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *ClickRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *ClickRequest) GetDeviceType() string {
	if x != nil {
		return x.DeviceType
	}
	return ""
}

func (x *ClickRequest) GetBrowser() string {
	if x != nil {
		return x.Browser
	}
	return ""
}

func (x *ClickRequest) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *ClickRequest) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Response for click tracking
type ClickResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // Whether tracking was successful
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`      // Error message if any
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClickResponse) Reset() {
	*x = ClickResponse{}
	mi := &file_proto_redirect_redirect_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClickResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickResponse) ProtoMessage() {}

func (x *ClickResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_redirect_redirect_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickResponse.ProtoReflect.Descriptor instead.
func (*ClickResponse) Descriptor() ([]byte, []int) {
	return file_proto_redirect_redirect_proto_rawDescGZIP(), []int{3}
}

func (x *ClickResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ClickResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Health check request
type HealthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthRequest) Reset() {
	*x = HealthRequest{}
	mi := &file_proto_redirect_redirect_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthRequest) ProtoMessage() {}

func (x *HealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_redirect_redirect_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthRequest.ProtoReflect.Descriptor instead.
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return file_proto_redirect_redirect_proto_rawDescGZIP(), []int{4}
}

// Health check response
type HealthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`        // "ok" or "error"
	Service       string                 `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`      // Service name
	Version       string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`      // Service version
	Timestamp     int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // Current timestamp
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	mi := &file_proto_redirect_redirect_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_redirect_redirect_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_proto_redirect_redirect_proto_rawDescGZIP(), []int{5}
}

func (x *HealthResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthResponse) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *HealthResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *HealthResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Click analytics event for NATS publishing
type ClickEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShortCode     string                 `protobuf:"bytes,1,opt,name=short_code,json=shortCode,proto3" json:"short_code,omitempty"`
	LongUrl       string                 `protobuf:"bytes,2,opt,name=long_url,json=longUrl,proto3" json:"long_url,omitempty"`
	ClientIp      string                 `protobuf:"bytes,3,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
	UserAgent     string                 `protobuf:"bytes,4,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	Referrer      string                 `protobuf:"bytes,5,opt,name=referrer,proto3" json:"referrer,omitempty"`
	Country       string                 `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	City          string                 `protobuf:"bytes,7,opt,name=city,proto3" json:"city,omitempty"`
	DeviceType    string                 `protobuf:"bytes,8,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty"`
	Browser       string                 `protobuf:"bytes,9,opt,name=browser,proto3" json:"browser,omitempty"`
	Os            string                 `protobuf:"bytes,10,opt,name=os,proto3" json:"os,omitempty"`
	Timestamp     int64                  `protobuf:"varint,11,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	SessionId     string                 `protobuf:"bytes,12,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"` // User session ID
	IsUnique      bool                   `protobuf:"varint,13,opt,name=is_unique,json=isUnique,proto3" json:"is_unique,omitempty"`   // First time this IP clicked this URL
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClickEvent) Reset() {
	*x = ClickEvent{}
	mi := &file_proto_redirect_redirect_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClickEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickEvent) ProtoMessage() {}

func (x *ClickEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_redirect_redirect_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickEvent.ProtoReflect.Descriptor instead.
func (*ClickEvent) Descriptor() ([]byte, []int) {
	return file_proto_redirect_redirect_proto_rawDescGZIP(), []int{6}
}

func (x *ClickEvent) GetShortCode() string {
	if x != nil {
		return x.ShortCode
	}
	return ""
}

func (x *ClickEvent) GetLongUrl() string {
	if x != nil {
		return x.LongUrl
	}
	return ""
}

func (x *ClickEvent) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *ClickEvent) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *ClickEvent) GetReferrer() string {
	if x != nil {
		return x.Referrer
	}
	return ""
}

func (x *ClickEvent) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *ClickEvent) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *ClickEvent) GetDeviceType() string {
	if x != nil {
		return x.DeviceType
	}
	return ""
}

func (x *ClickEvent) GetBrowser() string {
	if x != nil {
		return x.Browser
	}
	return ""
}

func (x *ClickEvent) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *ClickEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ClickEvent) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ClickEvent) GetIsUnique() bool {
	if x != nil {
		return x.IsUnique
	}
	return false
}

// Cache entry for URL mapping
type URLCacheEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShortCode     string                 `protobuf:"bytes,1,opt,name=short_code,json=shortCode,proto3" json:"short_code,omitempty"`
	LongUrl       string                 `protobuf:"bytes,2,opt,name=long_url,json=longUrl,proto3" json:"long_url,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ExpiresAt     int64                  `protobuf:"varint,4,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	ClickCount    int64                  `protobuf:"varint,5,opt,name=click_count,json=clickCount,proto3" json:"click_count,omitempty"`
	IsActive      bool                   `protobuf:"varint,6,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *URLCacheEntry) Reset() {
	*x = URLCacheEntry{}
	mi := &file_proto_redirect_redirect_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *URLCacheEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLCacheEntry) ProtoMessage() {}

func (x *URLCacheEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_redirect_redirect_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLCacheEntry.ProtoReflect.Descriptor instead.
func (*URLCacheEntry) Descriptor() ([]byte, []int) {
	return file_proto_redirect_redirect_proto_rawDescGZIP(), []int{7}
}

func (x *URLCacheEntry) GetShortCode() string {
	if x != nil {
		return x.ShortCode
	}
	return ""
}

func (x *URLCacheEntry) GetLongUrl() string {
	if x != nil {
		return x.LongUrl
	}
	return ""
}

func (x *URLCacheEntry) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *URLCacheEntry) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *URLCacheEntry) GetClickCount() int64 {
	if x != nil {
		return x.ClickCount
	}
	return 0
}

func (x *URLCacheEntry) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

var File_proto_redirect_redirect_proto protoreflect.FileDescriptor

const file_proto_redirect_redirect_proto_rawDesc = "" +
	"\n" +
	"\x1dproto/redirect/redirect.proto\x12\bredirect\"\xc2\x01\n" +
	"\x0eResolveRequest\x12\x1d\n" +
	"\n" +
	"short_code\x18\x01 \x01(\tR\tshortCode\x12\x1b\n" +
	"\tclient_ip\x18\x02 \x01(\tR\bclientIp\x12\x1d\n" +
	"\n" +
	"user_agent\x18\x03 \x01(\tR\tuserAgent\x12\x1a\n" +
	"\breferrer\x18\x04 \x01(\tR\breferrer\x12\x18\n" +
	"\acountry\x18\x05 \x01(\tR\acountry\x12\x1f\n" +
	"\vdevice_type\x18\x06 \x01(\tR\n" +
	"deviceType\"\xd1\x01\n" +
	"\x0fResolveResponse\x12\x19\n" +
	"\blong_url\x18\x01 \x01(\tR\alongUrl\x12\x14\n" +
	"\x05found\x18\x02 \x01(\bR\x05found\x12\x18\n" +
	"\aexpired\x18\x03 \x01(\bR\aexpired\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x05 \x01(\x03R\texpiresAt\x12\x1f\n" +
	"\vclick_count\x18\x06 \x01(\x03R\n" +
	"clickCount\x12\x14\n" +
	"\x05error\x18\a \x01(\tR\x05error\"\xb7\x02\n" +
	"\fClickRequest\x12\x1d\n" +
	"\n" +
	"short_code\x18\x01 \x01(\tR\tshortCode\x12\x19\n" +
	"\blong_url\x18\x02 \x01(\tR\alongUrl\x12\x1b\n" +
	"\tclient_ip\x18\x03 \x01(\tR\bclientIp\x12\x1d\n" +
	"\n" +
	"user_agent\x18\x04 \x01(\tR\tuserAgent\x12\x1a\n" +
	"\breferrer\x18\x05 \x01(\tR\breferrer\x12\x18\n" +
	"\acountry\x18\x06 \x01(\tR\acountry\x12\x12\n" +
	"\x04city\x18\a \x01(\tR\x04city\x12\x1f\n" +
	"\vdevice_type\x18\b \x01(\tR\n" +
	"deviceType\x12\x18\n" +
	"\abrowser\x18\t \x01(\tR\abrowser\x12\x0e\n" +
	"\x02os\x18\n" +
	" \x01(\tR\x02os\x12\x1c\n" +
	"\ttimestamp\x18\v \x01(\x03R\ttimestamp\"?\n" +
	"\rClickResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\x0f\n" +
	"\rHealthRequest\"z\n" +
	"\x0eHealthResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\aservice\x18\x02 \x01(\tR\aservice\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\"\xf1\x02\n" +
	"\n" +
	"ClickEvent\x12\x1d\n" +
	"\n" +
	"short_code\x18\x01 \x01(\tR\tshortCode\x12\x19\n" +
	"\blong_url\x18\x02 \x01(\tR\alongUrl\x12\x1b\n" +
	"\tclient_ip\x18\x03 \x01(\tR\bclientIp\x12\x1d\n" +
	"\n" +
	"user_agent\x18\x04 \x01(\tR\tuserAgent\x12\x1a\n" +
	"\breferrer\x18\x05 \x01(\tR\breferrer\x12\x18\n" +
	"\acountry\x18\x06 \x01(\tR\acountry\x12\x12\n" +
	"\x04city\x18\a \x01(\tR\x04city\x12\x1f\n" +
	"\vdevice_type\x18\b \x01(\tR\n" +
	"deviceType\x12\x18\n" +
	"\abrowser\x18\t \x01(\tR\abrowser\x12\x0e\n" +
	"\x02os\x18\n" +
	" \x01(\tR\x02os\x12\x1c\n" +
	"\ttimestamp\x18\v \x01(\x03R\ttimestamp\x12\x1d\n" +
	"\n" +
	"session_id\x18\f \x01(\tR\tsessionId\x12\x1b\n" +
	"\tis_unique\x18\r \x01(\bR\bisUnique\"\xc5\x01\n" +
	"\rURLCacheEntry\x12\x1d\n" +
	"\n" +
	"short_code\x18\x01 \x01(\tR\tshortCode\x12\x19\n" +
	"\blong_url\x18\x02 \x01(\tR\alongUrl\x12\x1d\n" +
	"\n" +
	"created_at\x18\x03 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x04 \x01(\x03R\texpiresAt\x12\x1f\n" +
	"\vclick_count\x18\x05 \x01(\x03R\n" +
	"clickCount\x12\x1b\n" +
	"\tis_active\x18\x06 \x01(\bR\bisActive2\xd0\x01\n" +
	"\x0fRedirectService\x12A\n" +
	"\n" +
	"ResolveURL\x12\x18.redirect.ResolveRequest\x1a\x19.redirect.ResolveResponse\x12=\n" +
	"\n" +
	"TrackClick\x12\x16.redirect.ClickRequest\x1a\x17.redirect.ClickResponse\x12;\n" +
	"\x06Health\x12\x17.redirect.HealthRequest\x1a\x18.redirect.HealthResponseB;Z9github.com/go-systems-lab/go-url-shortener/proto/redirectb\x06proto3"

var (
	file_proto_redirect_redirect_proto_rawDescOnce sync.Once
	file_proto_redirect_redirect_proto_rawDescData []byte
)

func file_proto_redirect_redirect_proto_rawDescGZIP() []byte {
	file_proto_redirect_redirect_proto_rawDescOnce.Do(func() {
		file_proto_redirect_redirect_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_redirect_redirect_proto_rawDesc), len(file_proto_redirect_redirect_proto_rawDesc)))
	})
	return file_proto_redirect_redirect_proto_rawDescData
}

var file_proto_redirect_redirect_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_redirect_redirect_proto_goTypes = []any{
	(*ResolveRequest)(nil),  // 0: redirect.ResolveRequest
	(*ResolveResponse)(nil), // 1: redirect.ResolveResponse
	(*ClickRequest)(nil),    // 2: redirect.ClickRequest
	(*ClickResponse)(nil),   // 3: redirect.ClickResponse
	(*HealthRequest)(nil),   // 4: redirect.HealthRequest
	(*HealthResponse)(nil),  // 5: redirect.HealthResponse
	(*ClickEvent)(nil),      // 6: redirect.ClickEvent
	(*URLCacheEntry)(nil),   // 7: redirect.URLCacheEntry
}
var file_proto_redirect_redirect_proto_depIdxs = []int32{
	0, // 0: redirect.RedirectService.ResolveURL:input_type -> redirect.ResolveRequest
	2, // 1: redirect.RedirectService.TrackClick:input_type -> redirect.ClickRequest
	4, // 2: redirect.RedirectService.Health:input_type -> redirect.HealthRequest
	1, // 3: redirect.RedirectService.ResolveURL:output_type -> redirect.ResolveResponse
	3, // 4: redirect.RedirectService.TrackClick:output_type -> redirect.ClickResponse
	5, // 5: redirect.RedirectService.Health:output_type -> redirect.HealthResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_redirect_redirect_proto_init() }
func file_proto_redirect_redirect_proto_init() {
	if File_proto_redirect_redirect_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_redirect_redirect_proto_rawDesc), len(file_proto_redirect_redirect_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_redirect_redirect_proto_goTypes,
		DependencyIndexes: file_proto_redirect_redirect_proto_depIdxs,
		MessageInfos:      file_proto_redirect_redirect_proto_msgTypes,
	}.Build()
	File_proto_redirect_redirect_proto = out.File
	file_proto_redirect_redirect_proto_goTypes = nil
	file_proto_redirect_redirect_proto_depIdxs = nil
}
